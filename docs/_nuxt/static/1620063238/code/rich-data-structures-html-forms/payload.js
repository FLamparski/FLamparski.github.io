__NUXT_JSONP__("/code/rich-data-structures-html-forms", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$){return {data:[{doc:{slug:"rich-data-structures-html-forms",description:"Make browsers URL-encode rich data structures for you",title:"Rich Data Structures in HTML Forms",author:{display:"Filip Wieland",itemref:"person_me"},date:"2015-11-26T00:00:00.000Z",toc:[{id:N,depth:O,text:P},{id:Q,depth:O,text:R}],body:{type:"root",children:[{type:b,tag:n,props:{},children:[{type:a,value:"URL encoding is an under-appreciated format. It allows you to send much richer data than simple flat key-value pairs,\r\nand is supported by all browsers - even if you disable JavaScript. Today I'll look at ways to use it to not have\r\nto encode my form data as JSON, even for very complex forms."}]},{type:a,value:h},{type:b,tag:S,props:{id:N},children:[{type:b,tag:T,props:{ariaHidden:U,href:"#lists",tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:P}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"Say you have a bunch of checkboxes that let you choose your pizza toppings. Naively, you can represent them as:"}]},{type:a,value:h},{type:b,tag:y,props:{className:[z]},children:[{type:b,tag:A,props:{className:[B,H]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"topping_feta"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"topping_pepperoni"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"topping_chicken"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"This doesn't look pretty, and likely will require back-end code changes whenever you want to offer more toppings,\r\nor solutions that scan for all keys that start with "},{type:b,tag:o,props:{},children:[{type:a,value:"topping_"}]},{type:a,value:". But we can do better."}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"The syntax for an URL-encoded list is "},{type:b,tag:o,props:{},children:[{type:a,value:"list[]=element0&list[]=element1&list[]=element2"}]},{type:a,value:". You can use "},{type:b,tag:o,props:{},children:[{type:a,value:"list[]"}]},{type:a,value:" as a name field,\r\nwhich browsers will gladly accept. With this in mind, let's rewrite our pizza toppings example:"}]},{type:a,value:h},{type:b,tag:y,props:{className:[z]},children:[{type:b,tag:A,props:{className:[B,H]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"feta"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"pepperoni"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"chicken"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"Let's say you want a pizza with feta cheese and chicken. You tick the boxes and hit the order button.\r\nAfter submitting this form, if you look at the request from the server, you'll see the following (it's pseudo-json):"}]},{type:a,value:h},{type:b,tag:y,props:{className:[z]},children:[{type:b,tag:A,props:{className:[B,K]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  toppings"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"["}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"'feta'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"'chicken'"}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"]"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"Compare that with the following for the \"traditional\" method:"}]},{type:a,value:h},{type:b,tag:y,props:{className:[z]},children:[{type:b,tag:A,props:{className:[B,K]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  topping_feta"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:"\n  topping_chicken"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:Y}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:S,props:{id:Q},children:[{type:b,tag:T,props:{ariaHidden:U,href:"#objects",tabIndex:V},children:[{type:b,tag:c,props:{className:[W,X]},children:[]}]},{type:a,value:R}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"(Okay, hash maps of string =\u003E string \u002F hash)"}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"Note that in the lists example we did not put anything in\r\nthe square brackets. We can put stuff in there, though, to create hash maps\r\nor sparse lists (implemented as numeric string keys, because I'm feeling a bit PHP today)."}]},{type:a,value:h},{type:b,tag:y,props:{className:[z]},children:[{type:b,tag:A,props:{className:[B,H]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"pizza[3][size]"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:Z},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:s}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"payment[card][cvc]"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:b,tag:c,props:{className:[d,e,k]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:"***"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"This might be the case if our user opted for pizza with index 3 to be 10\" in diameter,\r\nand wants to pay for it by card. Again, pseudo-json:"}]},{type:a,value:h},{type:b,tag:y,props:{className:[z]},children:[{type:b,tag:A,props:{className:[B,K]},children:[{type:b,tag:o,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n  pizza"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:"3"}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n      size"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,G]},children:[{type:a,value:Z}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:L}]},{type:a,value:"\n  payment"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n    card"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:w}]},{type:a,value:"\n      cvc"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"'***'"}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:x}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"This is starting to look a little like JSON requests you'd get from\r\nyour mobile app, right? All that without any JavaScript involved\r\nto build a data structure, it's all part of the encoding. This\r\nscheme will work out of the box in PHP and in Node's Express with body-parser."}]},{type:a,value:h},{type:b,tag:n,props:{},children:[{type:a,value:"Note that I'm not quite sure what happens if you want to use this\r\nsyntax to define a list of hashes, however since you can use numerical\r\nkeys, you should be able to work around that."}]}]},dir:"\u002Fcode",path:"\u002Fcode\u002Frich-data-structures-html-forms",extension:".md",createdAt:$,updatedAt:$}}],fetch:{},mutations:void 0}}("text","element","span","token","punctuation","\""," ","\n","attr-name","attr-value","attr-equals","=","tag","p","code","operator",":","\u003C","input","type","name","value","{","}","div","nuxt-content-highlight","pre","line-numbers","checkbox","\u002F\u003E","\n    ","string","number","language-html","yes","toppings[]","language-javascript",",","\n  ","lists",2,"Lists","objects","Objects","h2","a","true",-1,"icon","icon-link","'yes'","10","\u003E","2021-05-03T13:30:06.312Z")));